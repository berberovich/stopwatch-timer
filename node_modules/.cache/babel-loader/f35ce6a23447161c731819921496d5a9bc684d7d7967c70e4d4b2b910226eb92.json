{"ast":null,"code":"var _jsxFileName = \"/home/msi/stopwatch-timer/src/components/SplitIntervalsList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useStopwatchContext } from \"./context/StopwatchContextProvider\";\nimport SplitIntervalItem from \"./SplitIntervalItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SplitIntervalsList() {\n  _s();\n  const {\n    splitIntervals,\n    setSplitIntervals\n  } = useStopwatchContext();\n  const handleBtnXClick = id => {\n    setSplitIntervals(prevIntervals => {\n      const splitIntervalsClone = [...prevIntervals];\n      return splitIntervalsClone.filter(interval => interval.id !== id).map((interval, i) => {\n        interval.ranking = i + 1;\n        return interval;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: splitIntervals.map(intervalData => {\n      return /*#__PURE__*/_jsxDEV(SplitIntervalItem, {\n        intervalData: intervalData,\n        handleBtnXClick: handleBtnXClick\n      }, intervalData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(SplitIntervalsList, \"kkjJjUFGAB9pdKJ3K+YbyKlbzQM=\", false, function () {\n  return [useStopwatchContext];\n});\n_c = SplitIntervalsList;\nexport default SplitIntervalsList;\nvar _c;\n$RefreshReg$(_c, \"SplitIntervalsList\");","map":{"version":3,"names":["React","useStopwatchContext","SplitIntervalItem","SplitIntervalsList","splitIntervals","setSplitIntervals","handleBtnXClick","id","prevIntervals","splitIntervalsClone","filter","interval","map","i","ranking","intervalData"],"sources":["/home/msi/stopwatch-timer/src/components/SplitIntervalsList.js"],"sourcesContent":["import React from \"react\";\nimport { useStopwatchContext } from \"./context/StopwatchContextProvider\";\nimport SplitIntervalItem from \"./SplitIntervalItem\";\n\nfunction SplitIntervalsList() {\n  const { splitIntervals, setSplitIntervals } = useStopwatchContext()\n  const handleBtnXClick = (id) => {\n    setSplitIntervals((prevIntervals) => {\n      const splitIntervalsClone = [...prevIntervals];\n      return splitIntervalsClone\n        .filter((interval) => interval.id !== id)\n        .map((interval, i) => {\n          interval.ranking = i + 1;\n          return interval;\n        });\n    });\n  };\n  return (\n    <ul>\n      {splitIntervals.map((intervalData) => {\n        return (\n          <SplitIntervalItem\n            key={intervalData.id}\n            intervalData={intervalData}\n            handleBtnXClick={handleBtnXClick}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default SplitIntervalsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC;AAEpD,SAASC,kBAAkB,GAAG;EAAA;EAC5B,MAAM;IAAEC,cAAc;IAAEC;EAAkB,CAAC,GAAGJ,mBAAmB,EAAE;EACnE,MAAMK,eAAe,GAAIC,EAAE,IAAK;IAC9BF,iBAAiB,CAAEG,aAAa,IAAK;MACnC,MAAMC,mBAAmB,GAAG,CAAC,GAAGD,aAAa,CAAC;MAC9C,OAAOC,mBAAmB,CACvBC,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACJ,EAAE,KAAKA,EAAE,CAAC,CACxCK,GAAG,CAAC,CAACD,QAAQ,EAAEE,CAAC,KAAK;QACpBF,QAAQ,CAACG,OAAO,GAAGD,CAAC,GAAG,CAAC;QACxB,OAAOF,QAAQ;MACjB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EACD,oBACE;IAAA,UACGP,cAAc,CAACQ,GAAG,CAAEG,YAAY,IAAK;MACpC,oBACE,QAAC,iBAAiB;QAEhB,YAAY,EAAEA,YAAa;QAC3B,eAAe,EAAET;MAAgB,GAF5BS,YAAY,CAACR,EAAE;QAAA;QAAA;QAAA;MAAA,QAGpB;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET;AAAC,GA1BQJ,kBAAkB;EAAA,QACqBF,mBAAmB;AAAA;AAAA,KAD1DE,kBAAkB;AA4B3B,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}